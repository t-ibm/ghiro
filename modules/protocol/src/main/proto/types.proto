syntax = "proto3";
package com.softwareag.tom.protocol.abi;
/*
 * Code Types.
 */
enum CodeType {
    OK                          = 0;
    
    // General response codes, 1 ~ 99
    InternalError               = 1;
    EncodingError               = 2;
    BadNonce                    = 3;
    Unauthorized                = 4;
    InsufficientFunds           = 5;
    UnknownRequest              = 6;
}
/*
 * Block Types.
 */
message DefaultBlockType {
	oneof value {
		uint64 block_number = 1;
        BlockType block = 2;
    }
}
enum BlockType {
    earliest = 0;
    latest = 1;
    pending = 2;
}
/*
 * Request Types.
 */
message Request {
	oneof value {
		RequestWeb3ClientVersion web3ClientVersion = 1;
		RequestNetListening netListening = 2;
		RequestEthGetBalance ethGetBalance = 3;
	}
}
message RequestWeb3ClientVersion {
}
message RequestNetListening {
}
message RequestEthGetBalance {
	bytes address = 1;
	DefaultBlockType default_block_type = 2;
}
/*
 * Response Types.
 */
message Response {
	oneof value {
		ResponseException exception = 1;
		ResponseWeb3ClientVersion web3ClientVersion = 2;
		ResponseNetListening netListening = 3;
		ResponseEthGetBalance ethGetBalance = 4;
	}
}
message ResponseException {
	CodeType code = 1;
	string message = 2;
	bytes data = 3;
}
message ResponseWeb3ClientVersion {
	string client_version = 1;
}
message ResponseNetListening {
	bool listening = 1;
}
message ResponseEthGetBalance {
    uint64 balance = 1;
}
/*
 * Service Definition.
 */
service AbiService {
	rpc Web3ClientVersion(RequestWeb3ClientVersion) returns (ResponseWeb3ClientVersion);
	rpc NetListening(RequestNetListening) returns (ResponseNetListening);
	rpc EthGetBalance(RequestEthGetBalance) returns (ResponseEthGetBalance);
}
